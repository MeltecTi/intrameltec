import{w as y}from"./chunk-GH5E4FQB-d59c17be.js";import{$ as u}from"./focusSafely-0d0e41b4.js";import{c as I,d as O,a as S}from"./useFocusable-37bc966c.js";import{s as B,i as D}from"./app-1e18f165.js";function M(a,n){let{elementType:t="button",isDisabled:e,onPress:l,onPressStart:b,onPressEnd:p,onPressChange:f,preventFocusOnPress:$,allowFocusWhenDisabled:P,onClick:o,href:x,target:h,rel:v,type:i="button",allowTextSelectionOnPress:m}=a,r;t==="button"?r={type:i,disabled:e}:r={role:"button",tabIndex:e?void 0:0,href:t==="a"&&!e?x:void 0,target:t==="a"?h:void 0,type:t==="input"?i:void 0,disabled:t==="input"?e:void 0,"aria-disabled":!e||t==="input"?void 0:e,rel:t==="a"?v:void 0};let c=B()||D();o&&typeof o=="function"&&y("onClick is deprecated, please use onPress instead. See: https://github.com/heroui-inc/heroui/issues/4292","useButton");const C=s=>{c&&(o==null||o(s)),l==null||l(s)};let{pressProps:g,isPressed:k}=I({onPressStart:b,onPressEnd:p,onPressChange:f,onPress:C,isDisabled:e,preventFocusOnPress:$,allowTextSelectionOnPress:m,ref:n}),{focusableProps:d}=O(a,n);P&&(d.tabIndex=e?-1:d.tabIndex);let w=u(d,g,S(a,{labelable:!0}));return{isPressed:k,buttonProps:u(r,w,{"aria-haspopup":a["aria-haspopup"],"aria-expanded":a["aria-expanded"],"aria-controls":a["aria-controls"],"aria-pressed":a["aria-pressed"],onClick:s=>{i==="button"&&c||o==null||o(s)}})}}export{M as u};
